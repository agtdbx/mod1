#version 430 core

layout (local_size_x = 8, local_size_y = 1, local_size_z = 1) in;

layout(r32f, binding = 0) uniform imageBuffer offsetsBuffer;
layout(r32f, binding = 1) uniform imageBuffer gridBuffer;

uniform float			smoothingRadius;
uniform int				gridW;
uniform int				gridH;
uniform int				gridD;
uniform int				idHsize;
uniform int				gridSize;
uniform int				offsetsSize;
uniform int				positionsSize;
uniform samplerBuffer	positionsBuffer;

void main()
{
	int		particleIndex, idXZ, x, y, z;
	vec3	startPos, endPos;

	particleIndex = int(gl_GlobalInvocationID.x);
	y = int(particleIndex / smoothingRadius);
	idXZ = particleIndex - int(y * smoothingRadius);
	z = int(idXZ / gridW);
	x = idXZ - (z * gridW);

	startPos = vec3(x, y, z) * smoothingRadius;
	endPos = vec3(x + 1.0, y + 1.0, z + 1.0) * smoothingRadius;

	// Write the value to the buffer
	imageStore(offsetsBuffer, particleIndex, vec4(0.0, 0.0, 0.0, 0.0));
}
